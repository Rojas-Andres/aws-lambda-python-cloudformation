AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Lambda test

Parameters:
  DataBaseDB:
    Description: Database DB
    Type: AWS::SSM::Parameter::Value<String>
    Default: DataBaseDB
  DataBaseHost:
    Description: Host Database
    Type: AWS::SSM::Parameter::Value<String>
    Default: DataBaseHost
  DataBasePassword:
    Description: Password Database
    Type: AWS::SSM::Parameter::Value<String>
    Default: DataBasePassword
  DataBasePort:
    Description: Port Database
    Type: AWS::SSM::Parameter::Value<String>
    Default: DataBasePort
  DataBaseUser:
    Description: User Database
    Type: AWS::SSM::Parameter::Value<String>
    Default: DataBaseUser
  AccessKeyId:
    Description: Aws Access Key Id
    Type: AWS::SSM::Parameter::Value<String>
    Default: AccessKeyId
  SecretAccessKey:
    Description: Aws secret access key
    Type: AWS::SSM::Parameter::Value<String>
    Default: SecretAccessKey
  SecretKey:
    Description: Secret Key
    Type: AWS::SSM::Parameter::Value<String>
    Default: SecretKey
  Region:
    Description: Aws Region
    Type: AWS::SSM::Parameter::Value<String>
    Default: Region
  Bucket:
    Description: Aws bucket s3
    Type: AWS::SSM::Parameter::Value<String>
    Default: Bucket
  SendgridApiKey:
    Description: Sendgrid api key
    Type: AWS::SSM::Parameter::Value<String>
    Default: SendgridApiKey
  FromEmail:
    Description: From email sendgrid
    Type: AWS::SSM::Parameter::Value<String>
    Default: FromEmail
    
Globals:
  Api:
    Name: !Sub api-${AWS::StackName}
    TracingEnabled: true
    Cors:
      AllowOrigin: "'*'"
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
    Auth:
      DefaultAuthorizer: LambdaAuthorizer
      AddDefaultAuthorizerToCorsPreflight: false
      Authorizers:
        LambdaAuthorizer:
          FunctionArn: !GetAtt AuthorizerFunction.Arn
Resources:
  NotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      MemorySize: 128
      Timeout: 360
      FunctionName: !Sub notification-${AWS::StackName}
      Description: !Sub notification
      CodeUri: modules/notification
      Handler: app.lambda_handler
      Environment:
        Variables:
          SENDGRID_API_KEY: !Ref SendgridApiKey
          FROM_EMAIL: !Ref FromEmail
          POSTGRES_HOST: !Ref DataBaseHost
          POSTGRES_USER: !Ref DataBaseUser
          POSTGRES_DB: !Ref DataBaseDB
          POSTGRES_PASSWORD: !Ref DataBasePassword
          POSTGRES_PORT: !Ref DataBasePort
          ENV_AWS_ACCESS_KEY_ID: !Ref AccessKeyId
          ENV_AWS_SECRET_ACCESS_KEY: !Ref SecretAccessKey
          ENV_AWS_S3_BUCKET_NAME: !Ref Bucket
          ENV_AWS_REGION: !Ref Region
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SqsQueueNotification.Arn
            BatchSize: 5
  SqsQueueNotification:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub notification-sqs-${AWS::StackName}
      VisibilityTimeout: 360

  UsersCreatedToday:
    Type: AWS::Events::Rule
    Properties:
      Description: "Usuarios creados hoy"
      Name: !Sub user_created_today-${AWS::StackName}
      State: ENABLED
      ScheduleExpression: "cron(59 23 * * ? *)"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "NotificationFunction"
              - "Arn"
          Id: "idusercreatedtodayeventrule"

  PermissionInvokeUserCreated:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "NotificationFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "UsersCreatedToday"
          - "Arn"

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      MemorySize: 128
      Timeout: 360
      FunctionName: !Sub authorizer-${AWS::StackName}
      Description: !Sub authorizer
      CodeUri: modules/authorizer
      Handler: app.lambda_handler
      Environment:
        Variables:
          ENV_AWS_ACCESS_KEY_ID: !Ref AccessKeyId
          ENV_AWS_SECRET_ACCESS_KEY: !Ref SecretAccessKey
          SECRET_KEY: !Ref SecretKey
          DYNAMODB_TABLE: !Sub authorizer-${AWS::StackName}
          ENV_AWS_REGION: !Ref Region

  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.9
      MemorySize: 128
      Timeout: 360
      FunctionName: !Sub users-${AWS::StackName}
      Description: !Sub users
      CodeUri: modules/users
      Handler: app.lambda_handler
      Environment:
        Variables:
          POSTGRES_HOST: !Ref DataBaseHost
          POSTGRES_USER: !Ref DataBaseUser
          POSTGRES_DB: !Ref DataBaseDB
          POSTGRES_PASSWORD: !Ref DataBasePassword
          POSTGRES_PORT: !Ref DataBasePort
          ENV_AWS_ACCESS_KEY_ID: !Ref AccessKeyId
          ENV_AWS_SECRET_ACCESS_KEY: !Ref SecretAccessKey
          ENV_AWS_S3_BUCKET_NAME: !Ref Bucket
          ENV_AWS_REGION: !Ref Region
          SECRET_KEY: !Ref SecretKey
          SQS_URL: !Ref SqsQueueNotification
          DYNAMODB_TABLE: !Sub authorizer-${AWS::StackName}
      Events:
        getUser:
          Type: Api
          Properties:
            Path: /users
            Method: get
        createUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
            Auth:
              Authorizer: NONE
        UserById:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: any
        Login:
          Type: Api
          Properties:
            Path: /login
            Method: post
            Auth:
              Authorizer: NONE
        TestApi:
          Type: Api
          Properties:
            Path: /testApi
            Method: get
            Auth:
              Authorizer: NONE
  AuthorizerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub authorizer-${AWS::StackName}
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5